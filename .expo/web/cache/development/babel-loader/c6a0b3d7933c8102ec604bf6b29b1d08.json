{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport React, { Component } from \"react\";\nimport { readDictionaryAsync } from \"spell-checker-js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      essayText: \"\",\n      isLoading: false,\n      essayWordCount: \"\",\n      essaySentenceCount: \"\",\n      averageSentenceLength: \"\",\n      lecturerInput1: \"\",\n      lecturerInput2: \"\",\n      lecturerInput3: \"\",\n      lecturerInput4: \"\",\n      lecturerInput5: \"\",\n      parametersPresentCount: 0,\n      spellingMistakesCount: 0,\n      minNumberWords: \"\",\n      maxNumberWords: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"processText\",\n    value: function processText() {\n      var essayExample = \"In this essay we will  discuss the... Notion that virtue is knowledge. We will do this by following Plato's own route into the discussion - a refutation of Meno's misconception of knowledge. The argument Plato provides to this end gives us crucial contextual information and allows us to see how Plato derives his doctrine that virtue is knowledge. We will look at the terms Plato uses to define virtuous and non-virtuous actions and analyse the connotations these held for him. I will then provide an exposition of the traditional formulation of the platonic 'moral paradox' before arguing that this paradox only exists if one misinterprets Plato's own text. 1. Desire for the good Plato's Meno focuses on the issue of virtue - its nature and its properties. During the dialogue several definitions of virtue are discussed. However, the definition that seems to be settled upon entails the doctrine that virtue is knowledge. This definition is proposed as a response to Meno's suggestion that virtue is a term encompassing two elements: firstly that virtue is the desire for good things and secondly that it is the ability to obtain good things. By way of answer, Socrates suggests that, in fact, everyone desires the good. As virtue is not present in all men, virtue cannot be the desire for good things. Socrates' argument for it.\";\n      var essay = essayExample;\n      this.state.essayWordCount = this.countWords(essay);\n      this.state.essaySentenceCount = this.countSentences(essay);\n      this.state.averageSentenceLength = this.state.essayWordCount / this.state.essaySentenceCount;\n      this.checkForLecturersParameters();\n    }\n  }, {\n    key: \"countWords\",\n    value: function countWords(essay) {\n      essay = essay.replace(/[^a-zA-Z0-9 ]/g, \"\");\n      essay = essay.replace(/[ ]{2,}/g, \" \");\n      var totalWordCount = essay.split(\" \").length;\n      return totalWordCount;\n    }\n  }, {\n    key: \"countSentences\",\n    value: function countSentences(essay) {\n      return essay.match(/\\w[.!?]\\s*\\$*/g).length;\n    }\n  }, {\n    key: \"checkSpelling\",\n    value: function checkSpelling() {\n      var Typo = require(\"typo-js\");\n\n      var dictionary = new Typo(\"en_US\");\n      dictionary.check(\"yes\");\n    }\n  }, {\n    key: \"checkForLecturersParameters\",\n    value: function checkForLecturersParameters() {\n      this.state.parametersPresentCount = 0;\n      var essay = this.state.essayText.toLowerCase();\n      essay = essay.replace(/[^a-zA-Z0-9 ]/g, \"\");\n      essay = essay.replace(/[ ]{2,}/g, \" \");\n      console.log(essay);\n      var wordPattern = /(\\s|^)will(\\s|$)/;\n      var wordPattern2 = /(\\s|^)LAURA(\\s|$)/;\n      console.log(\"willC: \", essay.match(wordPattern));\n      console.log(\"LAURA: \", essay.match(wordPattern2));\n\n      if (this.state.lecturerInput1 != \"\") {\n        if (essay.includes(this.state.lecturerInput1.toLowerCase())) {\n          this.state.parametersPresentCount += 1;\n        }\n      }\n\n      if (this.state.lecturerInput2 != \"\") {\n        if (essay.includes(this.state.lecturerInput2.toLowerCase())) {\n          this.state.parametersPresentCount += 1;\n        }\n      }\n\n      if (this.state.lecturerInput3 != \"\") {\n        if (essay.includes(this.state.lecturerInput3.toLowerCase())) {\n          this.state.parametersPresentCount += 1;\n        }\n      }\n\n      if (this.state.lecturerInput4 != \"\") {\n        if (essay.includes(this.state.lecturerInput4.toLowerCase())) {\n          this.state.parametersPresentCount += 1;\n        }\n      }\n\n      if (this.state.lecturerInput5 != \"\") {\n        if (essay.includes(this.state.lecturerInput5.toLowerCase())) {\n          this.state.parametersPresentCount += 1;\n        }\n      }\n\n      console.log();\n      console.log(\"Parameters: \", this.state.lecturerInput1, this.state.lecturerInput2, this.state.lecturerInput3, this.state.lecturerInput4, this.state.lecturerInput5, \"\\nParameters present: \", this.state.parametersPresentCount);\n    }\n  }, {\n    key: \"countParagraphs\",\n    value: function countParagraphs() {\n      this.state.paragrahsCount = this.state.essayText.split(/\\n/).length;\n    }\n  }, {\n    key: \"checkWordsRange\",\n    value: function checkWordsRange() {\n      console.log(/^\\d+$/.test(this.state.minNumberWords));\n      console.log(/^\\d+$/.test(this.state.maxNumberWords));\n      console.log(this.state.essayWordCount, this.state.minNumberWords, this.state.maxNumberWords);\n\n      if (/^\\d+$/.test(this.state.minNumberWords) && /^\\d+$/.test(this.state.maxNumberWords)) {\n        console.log(\"Both inputs are correct!\");\n\n        if (this.state.essayWordCount > this.state.minNumberWords && this.state.essayWordCount < this.state.maxNumberWords) {\n          console.log(\"Essay word count between range!\");\n        }\n      } else {\n        console.log(\"One or both inputs incorrect! Try again\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.isLoading) {\n        return _jsx(View, {\n          children: _jsx(Text, {\n            children: \"Loading..\"\n          })\n        });\n      } else {\n        return _jsxs(View, {\n          style: styles.container,\n          children: [_jsx(View, {\n            style: styles.row,\n            children: _jsx(TextInput, {\n              style: styles.input,\n              multiline: true,\n              placeholder: \"Insert text\",\n              onChangeText: function onChangeText(essayText) {\n                return _this2.setState({\n                  essayText: essayText\n                });\n              },\n              value: this.state.essayText\n            })\n          }), _jsxs(View, {\n            style: styles.row,\n            children: [_jsx(Button, {\n              title: \"UPLOAD FILE\",\n              onPress: function onPress() {\n                return _this2.processText();\n              }\n            }), _jsx(Button, {\n              title: \"ESSAY TYPE\",\n              onPress: function onPress() {\n                return _this2.processText();\n              }\n            }), _jsx(Button, {\n              title: \"SUBMIT\",\n              onPress: function onPress() {\n                return _this2.processText();\n              }\n            })]\n          }), _jsxs(View, {\n            style: styles.rowVertical,\n            children: [_jsx(TextInput, {\n              style: styles.lecturerInput,\n              onChangeText: function onChangeText(lecturerInput1) {\n                return _this2.setState({\n                  lecturerInput1: lecturerInput1\n                });\n              },\n              value: this.state.lecturerInput1\n            }), _jsx(TextInput, {\n              style: styles.lecturerInput,\n              onChangeText: function onChangeText(lecturerInput2) {\n                return _this2.setState({\n                  lecturerInput2: lecturerInput2\n                });\n              },\n              value: this.state.lecturerInput2\n            }), _jsx(TextInput, {\n              style: styles.lecturerInput,\n              onChangeText: function onChangeText(lecturerInput3) {\n                return _this2.setState({\n                  lecturerInput3: lecturerInput3\n                });\n              },\n              value: this.state.lecturerInput3\n            }), _jsx(TextInput, {\n              style: styles.lecturerInput,\n              onChangeText: function onChangeText(lecturerInput4) {\n                return _this2.setState({\n                  lecturerInput4: lecturerInput4\n                });\n              },\n              value: this.state.lecturerInput4\n            }), _jsx(TextInput, {\n              style: styles.lecturerInput,\n              onChangeText: function onChangeText(lecturerInput5) {\n                return _this2.setState({\n                  lecturerInput5: lecturerInput5\n                });\n              },\n              value: this.state.lecturerInput5\n            })]\n          }), _jsxs(View, {\n            style: styles.rowVertical,\n            children: [_jsx(TextInput, {\n              style: styles.lecturerInput,\n              onChangeText: function onChangeText(minNumberWords) {\n                return _this2.setState({\n                  minNumberWords: minNumberWords\n                });\n              },\n              value: this.state.minNumberWords,\n              keyboardType: \"numeric\",\n              maxLength: 5,\n              placeholder: \"min\"\n            }), _jsx(TextInput, {\n              style: styles.lecturerInput,\n              onChangeText: function onChangeText(maxNumberWords) {\n                return _this2.setState({\n                  maxNumberWords: maxNumberWords\n                });\n              },\n              value: this.state.maxNumberWords,\n              keyboardType: \"numeric\",\n              maxLength: 5,\n              placeholder: \"max\"\n            })]\n          })]\n        });\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;\nvar styles = StyleSheet.create({\n  input: {\n    height: 300,\n    fontSize: 16,\n    padding: 10,\n    backgroundColor: \"#ffffff\",\n    width: \"100%\",\n    borderRadius: 10,\n    borderColor: \"black\"\n  },\n  container: {\n    backgroundColor: \"#2EA7EB\",\n    flex: 1,\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: 20\n  },\n  row: {\n    flexDirection: \"row\",\n    minWidth: 600,\n    justifyContent: \"space-between\",\n    marginTop: 40\n  },\n  rowVertical: {\n    flexDirection: \"columns\",\n    minWidth: 600,\n    justifyContent: \"space-between\",\n    marginTop: 40\n  },\n  lecturerInput: {\n    backgroundColor: \"#ffffff\",\n    padding: 10,\n    marginBottom: 10,\n    borderWidth: 2,\n    borderColor: \"#000000\"\n  }\n});","map":{"version":3,"sources":["/Users/andreifrandes/AutomatedEssayGradingSystem/App.js"],"names":["React","Component","readDictionaryAsync","App","props","state","essayText","isLoading","essayWordCount","essaySentenceCount","averageSentenceLength","lecturerInput1","lecturerInput2","lecturerInput3","lecturerInput4","lecturerInput5","parametersPresentCount","spellingMistakesCount","minNumberWords","maxNumberWords","essayExample","essay","countWords","countSentences","checkForLecturersParameters","replace","totalWordCount","split","length","match","Typo","require","dictionary","check","toLowerCase","console","log","wordPattern","wordPattern2","includes","paragrahsCount","test","styles","container","row","input","setState","processText","rowVertical","lecturerInput","StyleSheet","create","height","fontSize","padding","backgroundColor","width","borderRadius","borderColor","flex","flexDirection","alignItems","minWidth","justifyContent","marginTop","marginBottom","borderWidth"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View, TextInput, Button } from \"react-native\";\nimport React, { Component } from \"react\";\nimport { readDictionaryAsync } from \"spell-checker-js\";\n\n// Set isLoading to true later\n\n// Todo\n// 1. Reset parameters at every turn\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      essayText: \"\",\n      isLoading: false, // set to true later\n      essayWordCount: \"\",\n      essaySentenceCount: \"\",\n      averageSentenceLength: \"\",\n      // Store the input from the lecturer\n      lecturerInput1: \"\",\n      lecturerInput2: \"\",\n      lecturerInput3: \"\",\n      lecturerInput4: \"\",\n      lecturerInput5: \"\",\n      // Keep track of the parameters present in the essay\n      parametersPresentCount: 0,\n      spellingMistakesCount: 0,\n      // Keep track of the range of words the lecturer expects the essay to be\n      minNumberWords: \"\",\n      maxNumberWords: \"\",\n      // Slider value\n    };\n  }\n\n  // main function\n  processText() {\n    // console.log(\"Essay:\\n\", this.state.essayText);\n    let essayExample =\n      \"In this essay we will  discuss the... Notion that virtue is knowledge. We will do this by following Plato's own route into the discussion - a refutation of Meno's misconception of knowledge. The argument Plato provides to this end gives us crucial contextual information and allows us to see how Plato derives his doctrine that virtue is knowledge. We will look at the terms Plato uses to define virtuous and non-virtuous actions and analyse the connotations these held for him. I will then provide an exposition of the traditional formulation of the platonic 'moral paradox' before arguing that this paradox only exists if one misinterprets Plato's own text. 1. Desire for the good Plato's Meno focuses on the issue of virtue - its nature and its properties. During the dialogue several definitions of virtue are discussed. However, the definition that seems to be settled upon entails the doctrine that virtue is knowledge. This definition is proposed as a response to Meno's suggestion that virtue is a term encompassing two elements: firstly that virtue is the desire for good things and secondly that it is the ability to obtain good things. By way of answer, Socrates suggests that, in fact, everyone desires the good. As virtue is not present in all men, virtue cannot be the desire for good things. Socrates' argument for it.\";\n    // Store the essay from the state inside a variable\n    // const essay = this.state.essayText; // replace\n\n    const essay = essayExample; // change\n\n    // Count the number of words for the whole essay\n    this.state.essayWordCount = this.countWords(essay);\n\n    // Count the number of sentences for the whole essay\n    this.state.essaySentenceCount = this.countSentences(essay);\n\n    // Calculate the average number of words per sentence\n    // Save the data inside the state to be used during the check\n    this.state.averageSentenceLength =\n      this.state.essayWordCount / this.state.essaySentenceCount;\n\n    // Check how many of the lecture's parameters are present inside the essay\n    this.checkForLecturersParameters();\n\n    // Count the number of paragraphs inside the essay\n    // this.countParagraphs();\n\n    // Check the essay spelling\n    // this.checkSpelling();\n    // Check if the of words inside the essay is in the range speciied by the lecturer\n    // this.checkWordsRange();\n    //\n  }\n\n  // Counts the words only NOT symbols\n  countWords(essay) {\n    // Replace all the characters with an empty space before preceding to counting the total number of words\n    essay = essay.replace(/[^a-zA-Z0-9 ]/g, \"\");\n    // Remove multiple spaces with single space to lead to correct word count\n    essay = essay.replace(/[ ]{2,}/g, \" \");\n    // Count all the words\n    const totalWordCount = essay.split(\" \").length;\n    return totalWordCount;\n  }\n\n  countSentences(essay) {\n    // Check the words followed by . or ! or ?, and followed by a whitespace, which signify then end on a sentence\n    return essay.match(/\\w[.!?]\\s*\\$*/g).length;\n  }\n\n  // Not working\n  checkSpelling(essay) {\n    const Typo = require(\"typo-js\");\n    const dictionary = new Typo();\n\n    // Check if it is working\n    let is_spelled_correctly = dictionary.check(\"mispelled\");\n    console.log(is_spelled_correctly);\n  }\n\n  // ------ STATUS: NOT FINISHED ---------\n  // Add a function to check if the essay contains the words that the lecture expect to be inside the essay\n  checkForLecturersParameters() {\n    // Reset the parameter count inside the state to count correctly at each iteration\n    this.state.parametersPresentCount = 0;\n    // Convert the whole essay to lowercase words, to ease the search for each term\n    let essay = this.state.essayText.toLowerCase();\n    // Remove all symbols, allow only spaces\n    essay = essay.replace(/[^a-zA-Z0-9 ]/g, \"\");\n    // Remove multiple spaces with single space to lead to correct word count\n    essay = essay.replace(/[ ]{2,}/g, \" \");\n    console.log(essay);\n\n    // Check that the word is at the beginnng of the essay, or at the end, as well as in the middle by checking for whitespaces\n    let wordPattern = /(\\s|^)will(\\s|$)/;\n    let wordPattern2 = /(\\s|^)LAURA(\\s|$)/;\n    // wordPattern = /in/;\n    console.log(\"willC: \", essay.match(wordPattern));\n    console.log(\"LAURA: \", essay.match(wordPattern2));\n\n    // Check if the parameters have been added by the lecturer, and if he essay contains them\n    if (this.state.lecturerInput1 != \"\") {\n      // Check if the parameter is present in the essay, and record in the state if it is\n      if (essay.includes(this.state.lecturerInput1.toLowerCase())) {\n        this.state.parametersPresentCount += 1;\n      }\n    }\n\n    if (this.state.lecturerInput2 != \"\") {\n      // Check if the parameter is present in the essay, and record in the state if it is\n      if (essay.includes(this.state.lecturerInput2.toLowerCase())) {\n        this.state.parametersPresentCount += 1;\n      }\n    }\n    if (this.state.lecturerInput3 != \"\") {\n      // Check if the parameter is present in the essay, and record in the state if it is\n      if (essay.includes(this.state.lecturerInput3.toLowerCase())) {\n        this.state.parametersPresentCount += 1;\n      }\n    }\n    if (this.state.lecturerInput4 != \"\") {\n      // Check if the parameter is present in the essay, and record in the state if it is\n      if (essay.includes(this.state.lecturerInput4.toLowerCase())) {\n        this.state.parametersPresentCount += 1;\n      }\n    }\n    if (this.state.lecturerInput5 != \"\") {\n      // Check if the parameter is present in the essay, and record in the state if it is\n      if (essay.includes(this.state.lecturerInput5.toLowerCase())) {\n        this.state.parametersPresentCount += 1;\n      }\n    }\n\n    console.log();\n\n    console.log(\n      \"Parameters: \",\n      this.state.lecturerInput1,\n      this.state.lecturerInput2,\n      this.state.lecturerInput3,\n      this.state.lecturerInput4,\n      this.state.lecturerInput5,\n      \"\\nParameters present: \",\n      this.state.parametersPresentCount\n    );\n  }\n\n  // Count the number of paragraphs\n  countParagraphs() {\n    this.state.paragrahsCount = this.state.essayText.split(/\\n/).length;\n  }\n\n  // ------ STATUS: NOT FINISHED ---------\n  /* IDEEA:\n    - Check words against normal dictionary ( make my own function )\n  */\n  //  V1, using one library\n  // checkSpelling() {\n  //   const spelling = require(\"spelling\");\n  //   const dictionary = require(\"./dictionaries/en_US.js\");\n  //   const dict = new spelling(dictionary);\n\n  //   // Remove all symbols from the essay to allow it to be checked for spelling mistakes( while acounting for \"'\" and \"-\" inside names )\n  //   let formattedEssay = this.state.essayText.replace(/[^a-zA-Z0-9 '\\-]/g, \"\");\n\n  //   // Turn the essay into an array of individual words, to be checked for spelling against a dictionary\n  //   formattedEssay = formattedEssay.split(/\\s+/);\n\n  //   // Remove double spaces from the essay\n  //   console.log(\"\\nFormatedEssay:\\n\", formattedEssay);\n  //   // Iterate through the essay and check each word for spelling\n  //   formattedEssay.forEach((element) => {\n  //     console.log(\"\\n\\n\");\n  //     // console.log(element);\n  //     dict.lookup(element);\n  //     if (dict.lookup(element).found) {\n  //       // console.log(element, \" speelled correcty!\");\n  //     } else {\n  //       // If the word is spelled incorrectly, reflect it inside the state\n  //       this.state.spellingMistakesCount += 1;\n  //       console.log(\"word: \", element, \" spelled incorrectly\");\n  //     }\n  //   });\n  //   console.log(\n  //     \"\\nNumber of spelling mistakes!:\",\n  //     this.state.spellingMistakesCount\n  //   );\n  // }\n\n  checkSpelling() {\n    var Typo = require(\"typo-js\");\n    var dictionary = new Typo(\"en_US\");\n    dictionary.check(\"yes\");\n  }\n\n  /* TODO\n    - Add errors\n    - add error for when it's empty as well\n  */\n  // Function to check whether the number of words inside the text is in the range expected by the lecturer\n  checkWordsRange() {\n    // Start by checking that the input provided by the lecturer is a number\n\n    console.log(/^\\d+$/.test(this.state.minNumberWords));\n    console.log(/^\\d+$/.test(this.state.maxNumberWords));\n    console.log(\n      this.state.essayWordCount,\n      this.state.minNumberWords,\n      this.state.maxNumberWords\n    );\n\n    // If both input are numbers, continue with the function. Otherwisem throw and error\n    if (\n      /^\\d+$/.test(this.state.minNumberWords) &&\n      /^\\d+$/.test(this.state.maxNumberWords)\n    ) {\n      console.log(\"Both inputs are correct!\");\n      // Check whether the essay is within range\n      if (\n        this.state.essayWordCount > this.state.minNumberWords &&\n        this.state.essayWordCount < this.state.maxNumberWords\n      ) {\n        console.log(\"Essay word count between range!\");\n      }\n    } else {\n      console.log(\"One or both inputs incorrect! Try again\");\n    }\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return (\n        <View>\n          <Text>Loading..</Text>\n        </View>\n      );\n    }\n    // Display if the the page is ready\n    else {\n      return (\n        <View style={styles.container}>\n          <View style={styles.row}>\n            <TextInput\n              style={styles.input}\n              multiline={true}\n              placeholder=\"Insert text\"\n              onChangeText={(essayText) => this.setState({ essayText })}\n              value={this.state.essayText}\n            />\n          </View>\n          <View style={styles.row}>\n            <Button title=\"UPLOAD FILE\" onPress={() => this.processText()} />\n            <Button title=\"ESSAY TYPE\" onPress={() => this.processText()} />\n            <Button title=\"SUBMIT\" onPress={() => this.processText()} />\n          </View>\n\n          <View style={styles.rowVertical}>\n            <TextInput\n              style={styles.lecturerInput}\n              onChangeText={(lecturerInput1) =>\n                this.setState({ lecturerInput1 })\n              }\n              value={this.state.lecturerInput1}\n            ></TextInput>\n            <TextInput\n              style={styles.lecturerInput}\n              onChangeText={(lecturerInput2) =>\n                this.setState({ lecturerInput2 })\n              }\n              value={this.state.lecturerInput2}\n            ></TextInput>\n            <TextInput\n              style={styles.lecturerInput}\n              onChangeText={(lecturerInput3) =>\n                this.setState({ lecturerInput3 })\n              }\n              value={this.state.lecturerInput3}\n            ></TextInput>\n            <TextInput\n              style={styles.lecturerInput}\n              onChangeText={(lecturerInput4) =>\n                this.setState({ lecturerInput4 })\n              }\n              value={this.state.lecturerInput4}\n            ></TextInput>\n            <TextInput\n              style={styles.lecturerInput}\n              onChangeText={(lecturerInput5) =>\n                this.setState({ lecturerInput5 })\n              }\n              value={this.state.lecturerInput5}\n            ></TextInput>\n          </View>\n          {/* Range oof words number */}\n          <View style={styles.rowVertical}>\n            <TextInput\n              style={styles.lecturerInput}\n              onChangeText={(minNumberWords) =>\n                this.setState({ minNumberWords })\n              }\n              value={this.state.minNumberWords}\n              keyboardType=\"numeric\"\n              maxLength={5}\n              placeholder=\"min\"\n            ></TextInput>\n            <TextInput\n              style={styles.lecturerInput}\n              onChangeText={(maxNumberWords) =>\n                this.setState({ maxNumberWords })\n              }\n              value={this.state.maxNumberWords}\n              keyboardType=\"numeric\"\n              maxLength={5}\n              placeholder=\"max\"\n            ></TextInput>\n          </View>\n        </View>\n      );\n    }\n  }\n}\n\nexport default App;\n\nconst styles = StyleSheet.create({\n  input: {\n    height: 300,\n    fontSize: 16, // CHANGE\n    padding: 10,\n    backgroundColor: \"#ffffff\",\n    width: \"100%\",\n    borderRadius: 10,\n    borderColor: \"black\",\n  },\n  container: {\n    backgroundColor: \"#2EA7EB\",\n    flex: 1,\n    flexDirection: \"column\",\n    alignItems: \"center\", // keep content in the middle\n    padding: 20,\n  },\n  row: {\n    flexDirection: \"row\",\n    minWidth: 600,\n    justifyContent: \"space-between\",\n    marginTop: 40,\n  },\n  rowVertical: {\n    flexDirection: \"columns\",\n    minWidth: 600,\n    justifyContent: \"space-between\",\n    marginTop: 40,\n  },\n  lecturerInput: {\n    backgroundColor: \"#ffffff\",\n    padding: 10,\n    marginBottom: 10,\n    borderWidth: 2,\n    borderColor: \"#000000\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}