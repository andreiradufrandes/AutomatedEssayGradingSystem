{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { Component } from \"react\";\nimport { readDictionaryAsync } from \"spell-checker-js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      essayText: \"\",\n      isLoading: false,\n      essayWordCount: \"\",\n      essaySentenceCount: \"\",\n      averageSentenceLength: \"\",\n      lecturerTopicTerms: [],\n      lecturerInput1: \"\",\n      lecturerInput2: \"\",\n      lecturerInput3: \"\",\n      lecturerInput4: \"\",\n      lecturerInput5: \"\",\n      parametersPresentCount: 0,\n      spellingMistakesCount: 0,\n      minNumberWords: \"\",\n      maxNumberWords: \"\",\n      prepositionsCount: 0\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"processText\",\n    value: function processText() {\n      var essayExample = \"In this essay we will  discuss the... Notion that virtue is knowledge. We will do this by following Plato's own route into the discussion - a refutation of Meno's misconception of knowledge. The argument Plato provides to this end gives us crucial contextual information and allows us to see how Plato derives his doctrine that virtue is knowledge. We will look at the terms Plato uses to define virtuous and non-virtuous actions and analyse the connotations these held for him. I will then provide an exposition of the traditional formulation of the platonic 'moral paradox' before arguing that this paradox only exists if one misinterprets Plato's own text. 1. Desire for the good Plato's Meno focuses on the issue of virtue - its nature and its properties. During the dialogue several definitions of virtue are discussed. However, the definition that seems to be settled upon entails the doctrine that virtue is knowledge. This definition is proposed as a response to Meno's suggestion that virtue is a term encompassing two elements: firstly that virtue is the desire for good things and secondly that it is the ability to obtain good things. By way of answer, Socrates suggests that, in fact, everyone desires the good. As virtue is not present in all men, virtue cannot be the desire for good things. Socrates' argument for it.\";\n      var essay = essayExample;\n      this.state.essayWordCount = this.countWords();\n      this.averageWordLength();\n      this.state.essaySentenceCount = this.countSentences(essay);\n      this.state.averageSentenceLength = this.state.essayWordCount / this.state.essaySentenceCount;\n      this.checkForLecturersParameters();\n      this.countPrepositions();\n    }\n  }, {\n    key: \"checkSpelling\",\n    value: function checkSpelling() {\n      var Typo = require(\"typo-js\");\n\n      var dictionary = new Typo(\"en_US\", false, false, {\n        dictionaryPath: \"typo/dictionaries/en_US/\"\n      });\n      console.log(dictionary.check(\"eyeteeth\"));\n    }\n  }, {\n    key: \"countWords\",\n    value: function countWords() {\n      var essay = this.state.essayText;\n      essay = \"In this essay we will  discuss the... Notion that virtue is knowledge. We will do this by following Plato's own route into the discussion - a refutation of Meno's misconception of knowledge. The argument Plato provides to this end gives us crucial contextual information and allows us to see how Plato derives his doctrine that virtue is knowledge. We will look at the terms Plato uses to define virtuous and non-virtuous actions and analyse the connotations these held for him. I will then provide an exposition of the traditional formulation of the platonic 'moral paradox' before arguing that this paradox only exists if one misinterprets Plato's own text. 1. Desire for the good Plato's Meno focuses on the issue of virtue - its nature and its properties. During the dialogue several definitions of virtue are discussed. However, the definition that seems to be settled upon entails the doctrine that virtue is knowledge. This definition is proposed as a response to Meno's suggestion that virtue is a term encompassing two elements: firstly that virtue is the desire for good things and secondly that it is the ability to obtain good things. By way of answer, Socrates suggests that, in fact, everyone desires the good. As virtue is not present in all men, virtue cannot be the desire for good things. Socrates' argument for it.\";\n      essay = essay.replace(/[^a-zA-Z0-9 ]/g, \"\");\n      essay = essay.replace(/[ ]{2,}/g, \" \");\n      var totalWordCount = essay.split(\" \").length;\n      return totalWordCount;\n    }\n  }, {\n    key: \"averageWordLength\",\n    value: function averageWordLength() {\n      var essay = this.state.essayText;\n      essay = \"In this essay we will  discuss the... Notion that virtue is knowledge. We will do this by following Plato's own route into the discussion - a refutation of Meno's misconception of knowledge. The argument Plato provides to this end gives us crucial contextual information and allows us to see how Plato derives his doctrine that virtue is knowledge. We will look at the terms Plato uses to define virtuous and non-virtuous actions and analyse the connotations these held for him. I will then provide an exposition of the traditional formulation of the platonic 'moral paradox' before arguing that this paradox only exists if one misinterprets Plato's own text. 1. Desire for the good Plato's Meno focuses on the issue of virtue - its nature and its properties. During the dialogue several definitions of virtue are discussed. However, the definition that seems to be settled upon entails the doctrine that virtue is knowledge. This definition is proposed as a response to Meno's suggestion that virtue is a term encompassing two elements: firstly that virtue is the desire for good things and secondly that it is the ability to obtain good things. By way of answer, Socrates suggests that, in fact, everyone desires the good. As virtue is not present in all men, virtue cannot be the desire for good things. Socrates' argument for it.\";\n      essay = essay.replace(/[^a-zA-Z0-9 ]/g, \"\");\n      essay = essay.replace(/[ ]{2,}/g, \" \");\n      essay = essay.split(\" \");\n      console.log(\"averageWordLength: \", essay);\n      var totalWordLength = 0;\n      essay.forEach(function (word) {\n        totalWordLength += word.length;\n      });\n      console.log(totalWordLength);\n    }\n  }, {\n    key: \"countSentences\",\n    value: function countSentences(essay) {\n      return essay.match(/\\w[.!?]\\s*\\$*/g).length;\n    }\n  }, {\n    key: \"checkForLecturersParameters\",\n    value: function checkForLecturersParameters() {\n      var _this2 = this;\n\n      this.state.parametersPresentCount = 0;\n      var lecturerParameteres = [this.state.lecturerInput1, this.state.lecturerInput2, this.state.lecturerInput3, this.state.lecturerInput4, this.state.lecturerInput5];\n      lecturerParameteres.forEach(function (element) {\n        return _this2.checkForParameter(element);\n      });\n      console.log(\"Parameters: \", this.state.lecturerInput1, this.state.lecturerInput2, this.state.lecturerInput3, this.state.lecturerInput4, this.state.lecturerInput5, \" Parameters present: \", this.state.parametersPresentCount);\n    }\n  }, {\n    key: \"checkForParameter\",\n    value: function checkForParameter(keyTerm) {\n      var essayLowerCaps = this.state.essayText.toLowerCase();\n      var essay = essayLowerCaps;\n      essay = essay.replace(/[^a-zA-Z0-9 ]/g, \"\");\n      essay = essay.replace(/[ ]{2,}/g, \" \");\n      var wordPattern = \"\";\n\n      if (keyTerm != \"\") {\n        keyTerm = keyTerm.toLowerCase();\n\n        if (keyTerm.match(/^[a-zA-Z]*$/) == null) {\n          if (essayLowerCaps.includes(keyTerm)) {\n            console.log(\"PARAMETER PRESENT\");\n            this.state.parametersPresentCount += 1;\n          }\n        } else {\n          wordPattern = new RegExp(\"( |^)\" + keyTerm + \"( |$)\");\n\n          if (essay.match(wordPattern) != null) {\n            console.log(\"PARAMETER PRESENT\");\n            this.state.parametersPresentCount += 1;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"countPrepositions\",\n    value: function countPrepositions() {\n      var _this3 = this;\n\n      var essay = this.state.essayText.toLowerCase();\n      var prepositions = [\"About\", \"After\", \"Ago\", \"Around\", \"At\", \"Before\", \"By\", \"Circa\", \"During\", \"Following\", \"For\", \"From\", \"Gone\", \"In\", \"On\", \"Past\", \"Prior to\", \"Since\", \"Until\", \"till\", \"Up to\", \"Up until\", \"Aboard\", \"Above\", \"Across\", \"Against\", \"Alongside\", \"Amid\", \"Among\", \"Apart from\", \"Astride\", \"At\", \"Atop\", \"Behind\", \"Below\", \"Beneath\", \"Beside\", \"Between\", \"Beyond\", \"By\", \"Close to\", \"Far\", \"Far from\", \"Forward of\", \"From\", \"In\", \"In between\", \"In front of\", \"Inside\", \"Into\", \"Minus\", \"Near\", \"Near to\", \"Next to\", \"Of\", \"Off\", \"On\", \"On board\", \"On top of\", \"Onto\", \"Upon\", \"Opposite\", \"Out\", \"Out of\", \"Outside\", \"Outside of\", \"Over\", \"Round\", \"Through\", \"Throughout\", \"To\", \"Together with\", \"Toward\", \"towards\", \"Under\", \"Underneath\", \"Up against\", \"With\", \"Within\", \"Without\", \"Above\", \"Across\", \"Against\", \"Ahead\", \"Along\", \"Along with\", \"Amid\", \"Around\", \"Away\", \"Away from\", \"Behind\", \"Below\", \"Beneath\", \"By means of\", \"Down\", \"Further to\", \"In between\", \"Into\", \"Off\", \"Off of\", \"On\", \"Onto\", \"Over\", \"Out of\", \"Past\", \"Round\", \"Through\", \"Toward/towards\", \"Under\", \"Up\", \"Via\", \"About\", \"According to\", \"Anti\", \"As\", \"As for\", \"As per\", \"As to\", \"As well as\", \"Aside from\", \"Bar\", \"Barring\", \"Because of\", \"Besides\", \"But for\", \"By\", \"But\", \"Concerning\", \"Considering\", \"Contrary to\", \"Counting\", \"Cum\", \"Depending on\", \"Despite\", \"Due to\", \"Except\", \"Except for\", \"Excepting\", \"Excluding\", \"Given\", \"In addition to\", \"in case of\", \"In face of\", \"In favor of\", \"in favour of\", \"In light of\", \"In spite of\", \"In view of\", \"Including\", \"Instead of\", \"Less\", \"Like\", \"Notwithstanding\", \"Of\", \"On account of\", \"On behalf of\", \"Other than\", \"Owing to\", \"Pending\", \"Per\", \"Plus\", \"Preparatory to\", \"Pro\", \"Re\", \"Regarding\", \"Regardless of\", \"Save\", \"Save for\", \"Saving\", \"Than\", \"Thanks to\", \"Unlike\", \"Versus\", \"With\", \"With reference to\", \"With regard to\", \"Worth\"];\n      var multiWordsPrepositions = [\"Prior to\", \"Up to\", \"Up until\", \"Apart from\", \"Close to\", \"Far from\", \"Forward of\", \"In between\", \"In front of\", \"Near to\", \"Next to\", \"On board\", \"On top of\", \"Out of\", \"Outside of\", \"Together with\", \"Up against\", \"Along with\", \"Away from\", \"By means of\", \"Further to\", \"In between\", \"Off of\", \"Out of\", \"According to\", \"As for\", \"As per\", \"As to\", \"As well as\", \"Aside from\", \"Because of\", \"But for\", \"Contrary to\", \"Depending on\", \"Due to\", \"Except for\", \"In addition to\", \"in case of\", \"In face of\", \"In favor of\", \"in favour of\", \"In light of\", \"In spite of\", \"In view of\", \"Instead of\", \"On account of\", \"On behalf of\", \"Other than\", \"Owing to\", \"Preparatory to\", \"Regardless of\", \"Save for\", \"Thanks to\", \"With reference to\", \"With regard to\"];\n      var singleWordPrepositions = [\"About\", \"After\", \"Ago\", \"Around\", \"At\", \"Before\", \"By\", \"Circa\", \"During\", \"Following\", \"For\", \"From\", \"Gone\", \"In\", \"On\", \"Past\", \"Since\", \"Until\", \"till\", \"Aboard\", \"Above\", \"Across\", \"Against\", \"Alongside\", \"Amid\", \"Among\", \"Astride\", \"At\", \"Atop\", \"Behind\", \"Below\", \"Beneath\", \"Beside\", \"Between\", \"Beyond\", \"By\", \"Far\", \"From\", \"In\", \"Inside\", \"Into\", \"Minus\", \"Near\", \"Of\", \"Off\", \"On\", \"Onto\", \"Upon\", \"Opposite\", \"Out\", \"Outside\", \"Over\", \"Round\", \"Through\", \"Throughout\", \"To\", \"Toward\", \"towards\", \"Under\", \"Underneath\", \"With\", \"Within\", \"Without\", \"Above\", \"Across\", \"Against\", \"Ahead\", \"Along\", \"Amid\", \"Around\", \"Away\", \"Behind\", \"Below\", \"Beneath\", \"Down\", \"Into\", \"Off\", \"On\", \"Onto\", \"Over\", \"Past\", \"Round\", \"Through\", \"Toward/towards\", \"Under\", \"Up\", \"Via\", \"About\", \"Anti\", \"As\", \"Bar\", \"Barring\", \"Besides\", \"By\", \"But\", \"Concerning\", \"Considering\", \"Counting\", \"Cum\", \"Despite\", \"Except\", \"Excepting\", \"Excluding\", \"Given\", \"Including\", \"Less\", \"Like\", \"Notwithstanding\", \"Of\", \"Pending\", \"Per\", \"Plus\", \"Pro\", \"Re\", \"Regarding\", \"Save\", \"Saving\", \"Than\", \"Unlike\", \"Versus\", \"With\", \"Worth\"];\n      console.log(essay);\n      singleWordPrepositions.forEach(function (preposition) {\n        var prepositionPattern = new RegExp(\"( |^)\" + preposition.toLowerCase() + \"( |$)\");\n\n        if (essay.match(prepositionPattern)) {\n          _this3.prepositionsCount += 1;\n          console.log(\"Single word prepositon ----------1: \", preposition);\n        }\n      });\n      multiWordsPrepositions.forEach(function (preposition) {\n        if (essay.includes(preposition.toLowerCase())) {\n          _this3.prepositionsCount += 1;\n          console.log(\"Multi word preposition :----------\", preposition);\n        }\n      });\n      console.log(\"prepositions count: \", this.state.prepositionsCount);\n    }\n  }, {\n    key: \"countParagraphs\",\n    value: function countParagraphs() {\n      this.state.paragrahsCount = this.state.essayText.split(/\\n/).length;\n    }\n  }, {\n    key: \"checkWordsRange\",\n    value: function checkWordsRange() {\n      console.log(/^\\d+$/.test(this.state.minNumberWords));\n      console.log(/^\\d+$/.test(this.state.maxNumberWords));\n      console.log(this.state.essayWordCount, this.state.minNumberWords, this.state.maxNumberWords);\n\n      if (/^\\d+$/.test(this.state.minNumberWords) && /^\\d+$/.test(this.state.maxNumberWords)) {\n        console.log(\"Both inputs are correct!\");\n\n        if (this.state.essayWordCount > this.state.minNumberWords && this.state.essayWordCount < this.state.maxNumberWords) {\n          console.log(\"Essay word count between range!\");\n        }\n      } else {\n        console.log(\"One or both inputs incorrect! Try again\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      if (this.state.isLoading) {\n        return _jsx(View, {\n          children: _jsx(Text, {\n            children: \"Loading..\"\n          })\n        });\n      } else {\n        return _jsxs(View, {\n          style: styles.body,\n          children: [_jsx(Text, {\n            style: styles.title,\n            children: \"AUTOMATED ESSAY MARKING SYSTEM\"\n          }), _jsxs(View, {\n            style: styles.container,\n            children: [_jsx(View, {\n              style: styles.row,\n              children: _jsx(Text, {\n                style: styles.subtitle,\n                children: \"INSERT ESSAY\"\n              })\n            }), _jsx(View, {\n              style: styles.row,\n              children: _jsx(TextInput, {\n                style: styles.input,\n                multiline: true,\n                onChangeText: function onChangeText(essayText) {\n                  return _this4.setState({\n                    essayText: essayText\n                  });\n                },\n                value: this.state.essayText\n              })\n            }), _jsx(View, {\n              style: styles.row,\n              children: _jsx(Text, {\n                style: styles.subtitle,\n                children: \"INSERT TOPIC RELATED WORDS\"\n              })\n            }), _jsxs(View, {\n              style: styles.row,\n              children: [_jsxs(View, {\n                children: [_jsx(Text, {\n                  style: styles.label,\n                  children: \"Key term 1:\"\n                }), _jsx(TextInput, {\n                  style: styles.lecturerInput,\n                  onChangeText: function onChangeText(lecturerInput1) {\n                    return _this4.setState({\n                      lecturerInput1: lecturerInput1\n                    });\n                  },\n                  value: this.state.lecturerInput1\n                })]\n              }), _jsxs(View, {\n                children: [_jsx(Text, {\n                  style: styles.label,\n                  children: \"Key term 2:\"\n                }), _jsx(TextInput, {\n                  style: styles.lecturerInput,\n                  onChangeText: function onChangeText(lecturerInput2) {\n                    return _this4.setState({\n                      lecturerInput2: lecturerInput2\n                    });\n                  },\n                  value: this.state.lecturerInput2\n                })]\n              }), _jsxs(View, {\n                children: [_jsx(Text, {\n                  style: styles.label,\n                  children: \"Key term 3:\"\n                }), _jsx(TextInput, {\n                  style: styles.lecturerInput,\n                  onChangeText: function onChangeText(lecturerInput3) {\n                    return _this4.setState({\n                      lecturerInput3: lecturerInput3\n                    });\n                  },\n                  value: this.state.lecturerInput3\n                })]\n              }), _jsxs(View, {\n                children: [_jsx(Text, {\n                  style: styles.label,\n                  children: \"Key term 4:\"\n                }), _jsx(TextInput, {\n                  style: styles.lecturerInput,\n                  onChangeText: function onChangeText(lecturerInput4) {\n                    return _this4.setState({\n                      lecturerInput4: lecturerInput4\n                    });\n                  },\n                  value: this.state.lecturerInput4\n                })]\n              }), _jsxs(View, {\n                children: [_jsx(Text, {\n                  style: styles.label,\n                  children: \"Key term 5:\"\n                }), _jsx(TextInput, {\n                  style: styles.lecturerInput,\n                  onChangeText: function onChangeText(lecturerInput5) {\n                    return _this4.setState({\n                      lecturerInput5: lecturerInput5\n                    });\n                  },\n                  value: this.state.lecturerInput5\n                })]\n              })]\n            }), _jsx(View, {\n              style: styles.row,\n              children: _jsx(Text, {\n                style: styles.subtitle,\n                children: \"INSERT EXPECTED WORD COUNT RANGE\"\n              })\n            }), _jsxs(View, {\n              style: styles.rowStart,\n              children: [_jsxs(View, {\n                children: [_jsx(Text, {\n                  style: styles.label,\n                  children: \"Min:\"\n                }), _jsx(TextInput, {\n                  style: styles.lecturerInput,\n                  onChangeText: function onChangeText(minNumberWords) {\n                    return _this4.setState({\n                      minNumberWords: minNumberWords\n                    });\n                  },\n                  value: this.state.minNumberWords,\n                  keyboardType: \"numeric\",\n                  maxLength: 5\n                })]\n              }), _jsxs(View, {\n                children: [_jsx(Text, {\n                  style: styles.label,\n                  children: \"Min:\"\n                }), _jsx(TextInput, {\n                  style: styles.lecturerInput,\n                  onChangeText: function onChangeText(maxNumberWords) {\n                    return _this4.setState({\n                      maxNumberWords: maxNumberWords\n                    });\n                  },\n                  value: this.state.maxNumberWords,\n                  keyboardType: \"numeric\",\n                  maxLength: 5\n                })]\n              })]\n            }), _jsxs(View, {\n              style: styles.row,\n              children: [_jsx(TouchableOpacity, {\n                style: styles.primaryButton,\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"ESSAY TYPE\"\n                })\n              }), _jsx(TouchableOpacity, {\n                style: styles.primaryButton,\n                onPress: function onPress() {\n                  return _this4.processText();\n                },\n                children: _jsx(Text, {\n                  style: styles.buttonText,\n                  children: \"SUBMIT\"\n                })\n              })]\n            })]\n          })]\n        });\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;\nvar styles = StyleSheet.create({\n  body: {\n    backgroundColor: \"#F1F1F1\",\n    backgroundColor: \"#F5F5F5\",\n    backgroundColor: \"#F5F5F5\",\n    height: \"100%\"\n  },\n  input: {\n    height: 300,\n    fontSize: 16,\n    padding: 10,\n    backgroundColor: \"#ffffff\",\n    width: \"100%\",\n    borderWidth: 3,\n    borderColor: \"#ABABAB\",\n    boxShadow: \"0px 4px 4px rgba(0, 0, 0, 0.25)\",\n    color: \"#444444\",\n    lineHeight: 25\n  },\n  container: {\n    flex: 1,\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    marginTop: 10,\n    maxWidth: 1100,\n    width: \"100%\",\n    margin: \"auto\",\n    marginBottom: 50,\n    backgroundColor: \"#F1F1F1\",\n    paddingLeft: 40,\n    paddingRight: 40,\n    paddingBottom: 20,\n    boxShadow: \"0px 4px 10px rgba(0, 0, 0, 0.25)\"\n  },\n  row: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    width: \"100%\",\n    flexWrap: \"wrap\",\n    gap: 8\n  },\n  rowStart: {\n    flexDirection: \"row\",\n    width: \"100%\",\n    flexWrap: \"wrap\",\n    gap: 25,\n    marginBottom: 25\n  },\n  rowVertical: {\n    flexDirection: \"columns\",\n    justifyContent: \"space-between\",\n    marginTop: 40,\n    backgroundColor: \"#E9E9E9\"\n  },\n  lecturerInput: {\n    backgroundColor: \"#ffffff\",\n    padding: 7,\n    marginBottom: 10,\n    borderWidth: 2,\n    borderColor: \"#ABABAB\",\n    color: \"#444444\"\n  },\n  title: {\n    backgroundColor: \"#E9E9E9\",\n    backgroundColor: \"#E0E0E0\",\n    fontSize: 30,\n    width: \"100%\",\n    textAlign: \"center\",\n    padding: 40,\n    fontStyle: \"normal\",\n    fontWeight: 600,\n    fontSize: 40,\n    lineHeight: 47,\n    letterSpacing: \"0.325em\",\n    color: \"#2EA7EB\",\n    boxShadow: \"0px 10px 10px rgba(0, 0, 0, 0.25)\",\n    marginBottom: 20\n  },\n  primaryButton: {\n    textAlign: \"center\",\n    minWidth: 169,\n    padding: 8,\n    backgroundColor: \"#FFFFFF\",\n    borderWidth: 2.5,\n    borderColor: \"#2EA7EB\"\n  },\n  buttonText: {\n    color: \"#2EA7EB\",\n    fontSize: \"14\",\n    letterSpacing: 1.25\n  },\n  subtitle: {\n    fontStyle: \"normal\",\n    fontWeight: 400,\n    fontSize: 20,\n    lineHeight: 18,\n    letterSpacing: \"0.16em\",\n    marginTop: 30,\n    marginBottom: 10,\n    color: \"#2EA7EB\"\n  },\n  label: {\n    fontStyle: \"normal\",\n    fontWeight: 400,\n    lineHeight: 18,\n    marginBottom: 2,\n    color: \"#444444\"\n  }\n});","map":{"version":3,"sources":["/Users/andreifrandes/AutomatedEssayGradingSystem/App.js"],"names":["React","Component","readDictionaryAsync","App","props","state","essayText","isLoading","essayWordCount","essaySentenceCount","averageSentenceLength","lecturerTopicTerms","lecturerInput1","lecturerInput2","lecturerInput3","lecturerInput4","lecturerInput5","parametersPresentCount","spellingMistakesCount","minNumberWords","maxNumberWords","prepositionsCount","essayExample","essay","countWords","averageWordLength","countSentences","checkForLecturersParameters","countPrepositions","Typo","require","dictionary","dictionaryPath","console","log","check","replace","totalWordCount","split","length","totalWordLength","forEach","word","match","lecturerParameteres","element","checkForParameter","keyTerm","essayLowerCaps","toLowerCase","wordPattern","includes","RegExp","prepositions","multiWordsPrepositions","singleWordPrepositions","preposition","prepositionPattern","paragrahsCount","test","styles","body","title","container","row","subtitle","input","setState","label","lecturerInput","rowStart","primaryButton","buttonText","processText","StyleSheet","create","backgroundColor","height","fontSize","padding","width","borderWidth","borderColor","boxShadow","color","lineHeight","flex","flexDirection","alignItems","marginTop","maxWidth","margin","marginBottom","paddingLeft","paddingRight","paddingBottom","justifyContent","flexWrap","gap","rowVertical","textAlign","fontStyle","fontWeight","letterSpacing","minWidth"],"mappings":"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","sourcesContent":["import {\n  StyleSheet,\n  Text,\n  View,\n  TextInput,\n  Button,\n  TouchableOpacity,\n} from \"react-native\";\nimport React, { Component } from \"react\";\nimport { readDictionaryAsync } from \"spell-checker-js\";\n\n// Set isLoading to true later\n\n// Todo\n// 1. Reset parameters at every turn\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      essayText: \"\",\n      isLoading: false, // set to true later\n      essayWordCount: \"\",\n      essaySentenceCount: \"\",\n      averageSentenceLength: \"\",\n      // Store the input from the lecturer\n      lecturerTopicTerms: [],\n      lecturerInput1: \"\",\n      lecturerInput2: \"\",\n      lecturerInput3: \"\",\n      lecturerInput4: \"\",\n      lecturerInput5: \"\",\n      // Keep track of the parameters present in the essay\n      parametersPresentCount: 0,\n      spellingMistakesCount: 0,\n      // Keep track of the range of words the lecturer expects the essay to be\n      minNumberWords: \"\",\n      maxNumberWords: \"\",\n      // Slider value\n      // Keep track of the number of prepositions\n      prepositionsCount: 0,\n    };\n  }\n\n  // main function\n  processText() {\n    // console.log(\"Essay:\\n\", this.state.essayText);\n    let essayExample =\n      \"In this essay we will  discuss the... Notion that virtue is knowledge. We will do this by following Plato's own route into the discussion - a refutation of Meno's misconception of knowledge. The argument Plato provides to this end gives us crucial contextual information and allows us to see how Plato derives his doctrine that virtue is knowledge. We will look at the terms Plato uses to define virtuous and non-virtuous actions and analyse the connotations these held for him. I will then provide an exposition of the traditional formulation of the platonic 'moral paradox' before arguing that this paradox only exists if one misinterprets Plato's own text. 1. Desire for the good Plato's Meno focuses on the issue of virtue - its nature and its properties. During the dialogue several definitions of virtue are discussed. However, the definition that seems to be settled upon entails the doctrine that virtue is knowledge. This definition is proposed as a response to Meno's suggestion that virtue is a term encompassing two elements: firstly that virtue is the desire for good things and secondly that it is the ability to obtain good things. By way of answer, Socrates suggests that, in fact, everyone desires the good. As virtue is not present in all men, virtue cannot be the desire for good things. Socrates' argument for it.\";\n    // Store the essay from the state inside a variable\n    // const essay = this.state.essayText; // replace\n\n    const essay = essayExample; // change\n\n    // Count the number of words for the whole essay\n    this.state.essayWordCount = this.countWords();\n\n    // calculate the average word length\n    this.averageWordLength();\n\n    // Count the number of sentences for the whole essay\n    this.state.essaySentenceCount = this.countSentences(essay);\n\n    // Calculate the average number of words per sentence\n    // Save the data inside the state to be used during the check\n    this.state.averageSentenceLength =\n      this.state.essayWordCount / this.state.essaySentenceCount;\n\n    // Check how many of the lecture's parameters are present inside the essay\n    this.checkForLecturersParameters();\n\n    // Count the number of paragraphs inside the essay\n    // this.countParagraphs();\n\n    // Check the essay spelling\n\n    // Check if the of words inside the essay is in the range speciied by the lecturer\n    // this.checkWordsRange();\n    //\n    // Count the number of prepositions present in the essay\n    this.countPrepositions();\n  }\n\n  // Not working\n  checkSpelling() {\n    var Typo = require(\"typo-js\");\n    // var dictionary = new Typo(\"en_US\");\n    var dictionary = new Typo(\"en_US\", false, false, {\n      dictionaryPath: \"typo/dictionaries/en_US/\",\n    });\n\n    console.log(dictionary.check(\"eyeteeth\"));\n\n    // Check if it is working\n    // let is_spelled_correctly = dictionary.check(\"yess\");\n    // console.log(is_spelled_correctly);\n  }\n\n  // Counts the words only NOT symbols\n  countWords() {\n    let essay = this.state.essayText;\n\n    // Delete later\n    essay =\n      \"In this essay we will  discuss the... Notion that virtue is knowledge. We will do this by following Plato's own route into the discussion - a refutation of Meno's misconception of knowledge. The argument Plato provides to this end gives us crucial contextual information and allows us to see how Plato derives his doctrine that virtue is knowledge. We will look at the terms Plato uses to define virtuous and non-virtuous actions and analyse the connotations these held for him. I will then provide an exposition of the traditional formulation of the platonic 'moral paradox' before arguing that this paradox only exists if one misinterprets Plato's own text. 1. Desire for the good Plato's Meno focuses on the issue of virtue - its nature and its properties. During the dialogue several definitions of virtue are discussed. However, the definition that seems to be settled upon entails the doctrine that virtue is knowledge. This definition is proposed as a response to Meno's suggestion that virtue is a term encompassing two elements: firstly that virtue is the desire for good things and secondly that it is the ability to obtain good things. By way of answer, Socrates suggests that, in fact, everyone desires the good. As virtue is not present in all men, virtue cannot be the desire for good things. Socrates' argument for it.\";\n    // Replace all the characters with an empty space before preceding to counting the total number of words\n    essay = essay.replace(/[^a-zA-Z0-9 ]/g, \"\");\n    // Remove multiple spaces with single space to lead to correct word count\n    essay = essay.replace(/[ ]{2,}/g, \" \");\n    // Count the number of words\n    const totalWordCount = essay.split(\" \").length;\n\n    return totalWordCount;\n  }\n  // Check the average length of the words\n  averageWordLength() {\n    let essay = this.state.essayText;\n\n    essay =\n      \"In this essay we will  discuss the... Notion that virtue is knowledge. We will do this by following Plato's own route into the discussion - a refutation of Meno's misconception of knowledge. The argument Plato provides to this end gives us crucial contextual information and allows us to see how Plato derives his doctrine that virtue is knowledge. We will look at the terms Plato uses to define virtuous and non-virtuous actions and analyse the connotations these held for him. I will then provide an exposition of the traditional formulation of the platonic 'moral paradox' before arguing that this paradox only exists if one misinterprets Plato's own text. 1. Desire for the good Plato's Meno focuses on the issue of virtue - its nature and its properties. During the dialogue several definitions of virtue are discussed. However, the definition that seems to be settled upon entails the doctrine that virtue is knowledge. This definition is proposed as a response to Meno's suggestion that virtue is a term encompassing two elements: firstly that virtue is the desire for good things and secondly that it is the ability to obtain good things. By way of answer, Socrates suggests that, in fact, everyone desires the good. As virtue is not present in all men, virtue cannot be the desire for good things. Socrates' argument for it.\";\n    // Replace all the characters with an empty space before preceding to counting the total number of words\n    essay = essay.replace(/[^a-zA-Z0-9 ]/g, \"\");\n    // Remove multiple spaces with single space to lead to correct word count\n    essay = essay.replace(/[ ]{2,}/g, \" \");\n    // store all the words inside an array to be able to count the word length after\n    essay = essay.split(\" \");\n\n    console.log(\"averageWordLength: \", essay);\n\n    // Calculate the length of each word and add it together to be able to calculater the average\n    let totalWordLength = 0;\n\n    essay.forEach((word) => {\n      totalWordLength += word.length;\n    });\n    console.log(totalWordLength);\n  }\n\n  countSentences(essay) {\n    // Check the words followed by . or ! or ?, and followed by a whitespace, which signify then end on a sentence\n    return essay.match(/\\w[.!?]\\s*\\$*/g).length;\n  }\n\n  checkForLecturersParameters() {\n    // Reset the parameter count inside the state to count correctly at each iteration\n    this.state.parametersPresentCount = 0;\n\n    // Store all the topic key terms provided by the lecturer in an array to ease the search for individual topic terms\n    let lecturerParameteres = [\n      this.state.lecturerInput1,\n      this.state.lecturerInput2,\n      this.state.lecturerInput3,\n      this.state.lecturerInput4,\n      this.state.lecturerInput5,\n    ];\n\n    // Check how many of the parameters are present inside the essay\n    lecturerParameteres.forEach((element) => this.checkForParameter(element));\n\n    console.log(\n      \"Parameters: \",\n      this.state.lecturerInput1,\n      this.state.lecturerInput2,\n      this.state.lecturerInput3,\n      this.state.lecturerInput4,\n      this.state.lecturerInput5,\n      \" Parameters present: \",\n      this.state.parametersPresentCount\n    ); // DELETE\n  }\n\n  // Helper function to cehck for individual search terms\n  checkForParameter(keyTerm) {\n    // Convert the whole essay to lowercase words, to ease the search for each term\n    let essayLowerCaps = this.state.essayText.toLowerCase();\n    // Make a copy of the essay text to be used for checking different parameters(the ones containinh symbols or spaces)\n    let essay = essayLowerCaps;\n    // Remove all symbols with white spaces\n    essay = essay.replace(/[^a-zA-Z0-9 ]/g, \"\");\n    // Remove multiple spaces with single space to lead to correct word count\n    essay = essay.replace(/[ ]{2,}/g, \" \");\n\n    // Initiate an empty pattern to be replaced by the word looked for\n    let wordPattern = \"\";\n    // Check if the parameters have been added by the lecturer, and if he essay contains them\n    if (keyTerm != \"\") {\n      keyTerm = keyTerm.toLowerCase();\n      // Check if the topic term contains more than one word, as well as special characters such as - or .\n      if (keyTerm.match(/^[a-zA-Z]*$/) == null) {\n        // If the lectures input containe more than one words, check to find it in the initial text before formating\n        if (essayLowerCaps.includes(keyTerm)) {\n          console.log(\"PARAMETER PRESENT\");\n          this.state.parametersPresentCount += 1;\n        }\n      } else {\n        // create a pattern for the lecturers input to be found inside the text\n        wordPattern = new RegExp(\"( |^)\" + keyTerm + \"( |$)\");\n        // Check if the parameter is present in the essay, and record in the state if it is\n        if (essay.match(wordPattern) != null) {\n          console.log(\"PARAMETER PRESENT\");\n          this.state.parametersPresentCount += 1;\n        }\n      }\n    }\n  }\n\n  // Count the number of prepositions present inside the essay\n  countPrepositions() {\n    let essay = this.state.essayText.toLowerCase();\n    const prepositions = [\n      \"About\",\n      \"After\",\n      \"Ago\",\n      \"Around\",\n      \"At\",\n      \"Before\",\n      \"By\",\n      \"Circa\",\n      \"During\",\n      \"Following\",\n      \"For\",\n      \"From\",\n      \"Gone\",\n      \"In\",\n      \"On\",\n      \"Past\",\n      \"Prior to\",\n      \"Since\",\n      \"Until\",\n      \"till\",\n      \"Up to\",\n      \"Up until\",\n      \"Aboard\",\n      \"Above\",\n      \"Across\",\n      \"Against\",\n      \"Alongside\",\n      \"Amid\",\n      \"Among\",\n      \"Apart from\",\n      \"Astride\",\n      \"At\",\n      \"Atop\",\n      \"Behind\",\n      \"Below\",\n      \"Beneath\",\n      \"Beside\",\n      \"Between\",\n      \"Beyond\",\n      \"By\",\n      \"Close to\",\n      \"Far\",\n      \"Far from\",\n      \"Forward of\",\n      \"From\",\n      \"In\",\n      \"In between\",\n      \"In front of\",\n      \"Inside\",\n      \"Into\",\n      \"Minus\",\n      \"Near\",\n      \"Near to\",\n      \"Next to\",\n      \"Of\",\n      \"Off\",\n      \"On\",\n      \"On board\",\n      \"On top of\",\n      \"Onto\",\n      \"Upon\",\n      \"Opposite\",\n      \"Out\",\n      \"Out of\",\n      \"Outside\",\n      \"Outside of\",\n      \"Over\",\n      \"Round\",\n      \"Through\",\n      \"Throughout\",\n      \"To\",\n      \"Together with\",\n      \"Toward\",\n      \"towards\",\n      \"Under\",\n      \"Underneath\",\n      \"Up against\",\n      \"With\",\n      \"Within\",\n      \"Without\",\n      \"Above\",\n      \"Across\",\n      \"Against\",\n      \"Ahead\",\n      \"Along\",\n      \"Along with\",\n      \"Amid\",\n      \"Around\",\n      \"Away\",\n      \"Away from\",\n      \"Behind\",\n      \"Below\",\n      \"Beneath\",\n      \"By means of\",\n      \"Down\",\n      \"Further to\",\n      \"In between\",\n      \"Into\",\n      \"Off\",\n      \"Off of\",\n      \"On\",\n      \"Onto\",\n      \"Over\",\n      \"Out of\",\n      \"Past\",\n      \"Round\",\n      \"Through\",\n      \"Toward/towards\",\n      \"Under\",\n      \"Up\",\n      \"Via\",\n      \"About\",\n      \"According to\",\n      \"Anti\",\n      \"As\",\n      \"As for\",\n      \"As per\",\n      \"As to\",\n      \"As well as\",\n      \"Aside from\",\n      \"Bar\",\n      \"Barring\",\n      \"Because of\",\n      \"Besides\",\n      \"But for\",\n      \"By\",\n      \"But\",\n      \"Concerning\",\n      \"Considering\",\n      \"Contrary to\",\n      \"Counting\",\n      \"Cum\",\n      \"Depending on\",\n      \"Despite\",\n      \"Due to\",\n      \"Except\",\n      \"Except for\",\n      \"Excepting\",\n      \"Excluding\",\n      \"Given\",\n      \"In addition to\",\n      \"in case of\",\n      \"In face of\",\n      \"In favor of\",\n      \"in favour of\",\n      \"In light of\",\n      \"In spite of\",\n      \"In view of\",\n      \"Including\",\n      \"Instead of\",\n      \"Less\",\n      \"Like\",\n      \"Notwithstanding\",\n      \"Of\",\n      \"On account of\",\n      \"On behalf of\",\n      \"Other than\",\n      \"Owing to\",\n      \"Pending\",\n      \"Per\",\n      \"Plus\",\n      \"Preparatory to\",\n      \"Pro\",\n      \"Re\",\n      \"Regarding\",\n      \"Regardless of\",\n      \"Save\",\n      \"Save for\",\n      \"Saving\",\n      \"Than\",\n      \"Thanks to\",\n      \"Unlike\",\n      \"Versus\",\n      \"With\",\n      \"With reference to\",\n      \"With regard to\",\n      \"Worth\",\n    ];\n    // Store all the prepositions in an array to be looked for inside the essay\n    const multiWordsPrepositions = [\n      \"Prior to\",\n      \"Up to\",\n      \"Up until\",\n      \"Apart from\",\n      \"Close to\",\n      \"Far from\",\n      \"Forward of\",\n      \"In between\",\n      \"In front of\",\n      \"Near to\",\n      \"Next to\",\n      \"On board\",\n      \"On top of\",\n      \"Out of\",\n      \"Outside of\",\n      \"Together with\",\n      \"Up against\",\n      \"Along with\",\n      \"Away from\",\n      \"By means of\",\n      \"Further to\",\n      \"In between\",\n      \"Off of\",\n      \"Out of\",\n      \"According to\",\n      \"As for\",\n      \"As per\",\n      \"As to\",\n      \"As well as\",\n      \"Aside from\",\n      \"Because of\",\n      \"But for\",\n      \"Contrary to\",\n      \"Depending on\",\n      \"Due to\",\n      \"Except for\",\n      \"In addition to\",\n      \"in case of\",\n      \"In face of\",\n      \"In favor of\",\n      \"in favour of\",\n      \"In light of\",\n      \"In spite of\",\n      \"In view of\",\n      \"Instead of\",\n      \"On account of\",\n      \"On behalf of\",\n      \"Other than\",\n      \"Owing to\",\n      \"Preparatory to\",\n      \"Regardless of\",\n      \"Save for\",\n      \"Thanks to\",\n      \"With reference to\",\n      \"With regard to\",\n    ];\n\n    const singleWordPrepositions = [\n      \"About\",\n      \"After\",\n      \"Ago\",\n      \"Around\",\n      \"At\",\n      \"Before\",\n      \"By\",\n      \"Circa\",\n      \"During\",\n      \"Following\",\n      \"For\",\n      \"From\",\n      \"Gone\",\n      \"In\",\n      \"On\",\n      \"Past\",\n      \"Since\",\n      \"Until\",\n      \"till\",\n      \"Aboard\",\n      \"Above\",\n      \"Across\",\n      \"Against\",\n      \"Alongside\",\n      \"Amid\",\n      \"Among\",\n      \"Astride\",\n      \"At\",\n      \"Atop\",\n      \"Behind\",\n      \"Below\",\n      \"Beneath\",\n      \"Beside\",\n      \"Between\",\n      \"Beyond\",\n      \"By\",\n      \"Far\",\n      \"From\",\n      \"In\",\n      \"Inside\",\n      \"Into\",\n      \"Minus\",\n      \"Near\",\n      \"Of\",\n      \"Off\",\n      \"On\",\n      \"Onto\",\n      \"Upon\",\n      \"Opposite\",\n      \"Out\",\n      \"Outside\",\n      \"Over\",\n      \"Round\",\n      \"Through\",\n      \"Throughout\",\n      \"To\",\n      \"Toward\",\n      \"towards\",\n      \"Under\",\n      \"Underneath\",\n      \"With\",\n      \"Within\",\n      \"Without\",\n      \"Above\",\n      \"Across\",\n      \"Against\",\n      \"Ahead\",\n      \"Along\",\n      \"Amid\",\n      \"Around\",\n      \"Away\",\n      \"Behind\",\n      \"Below\",\n      \"Beneath\",\n      \"Down\",\n      \"Into\",\n      \"Off\",\n      \"On\",\n      \"Onto\",\n      \"Over\",\n      \"Past\",\n      \"Round\",\n      \"Through\",\n      \"Toward/towards\",\n      \"Under\",\n      \"Up\",\n      \"Via\",\n      \"About\",\n      \"Anti\",\n      \"As\",\n      \"Bar\",\n      \"Barring\",\n      \"Besides\",\n      \"By\",\n      \"But\",\n      \"Concerning\",\n      \"Considering\",\n      \"Counting\",\n      \"Cum\",\n      \"Despite\",\n      \"Except\",\n      \"Excepting\",\n      \"Excluding\",\n      \"Given\",\n      \"Including\",\n      \"Less\",\n      \"Like\",\n      \"Notwithstanding\",\n      \"Of\",\n      \"Pending\",\n      \"Per\",\n      \"Plus\",\n      \"Pro\",\n      \"Re\",\n      \"Regarding\",\n      \"Save\",\n      \"Saving\",\n      \"Than\",\n      \"Unlike\",\n      \"Versus\",\n      \"With\",\n      \"Worth\",\n    ];\n    console.log(essay);\n\n    singleWordPrepositions.forEach((preposition) => {\n      // prepositionPattern = new RegExp(\"( |^)\" + preposition.toLowerCase() + \"( |$)\");\n      let prepositionPattern = new RegExp(\n        \"( |^)\" + preposition.toLowerCase() + \"( |$)\"\n      );\n      if (essay.match(prepositionPattern)) {\n        // Increase the count if the preposition is present\n        this.prepositionsCount += 1;\n        console.log(\"Single word prepositon ----------1: \", preposition);\n      }\n    });\n\n    multiWordsPrepositions.forEach((preposition) => {\n      if (essay.includes(preposition.toLowerCase())) {\n        // Increase the count if the preposition is present\n        this.prepositionsCount += 1;\n        console.log(\"Multi word preposition :----------\", preposition);\n      }\n    });\n    console.log(\"prepositions count: \", this.state.prepositionsCount);\n  }\n\n  // Count the number of paragraphs\n  countParagraphs() {\n    this.state.paragrahsCount = this.state.essayText.split(/\\n/).length;\n  }\n\n  // ------ STATUS: NOT FINISHED ---------\n  /* IDEEA:\n    - Check words against normal dictionary ( make my own function )\n  */\n  //  V1, using one library\n  // checkSpelling() {\n  //   const spelling = require(\"spelling\");\n  //   const dictionary = require(\"./dictionaries/en_US.js\");\n  //   const dict = new spelling(dictionary);\n\n  //   // Remove all symbols from the essay to allow it to be checked for spelling mistakes( while acounting for \"'\" and \"-\" inside names )\n  //   let formattedEssay = this.state.essayText.replace(/[^a-zA-Z0-9 '\\-]/g, \"\");\n\n  //   // Turn the essay into an array of individual words, to be checked for spelling against a dictionary\n  //   formattedEssay = formattedEssay.split(/\\s+/);\n\n  //   // Remove double spaces from the essay\n  //   console.log(\"\\nFormatedEssay:\\n\", formattedEssay);\n  //   // Iterate through the essay and check each word for spelling\n  //   formattedEssay.forEach((element) => {\n  //     console.log(\"\\n\\n\");\n  //     // console.log(element);\n  //     dict.lookup(element);\n  //     if (dict.lookup(element).found) {\n  //       // console.log(element, \" speelled correcty!\");\n  //     } else {\n  //       // If the word is spelled incorrectly, reflect it inside the state\n  //       this.state.spellingMistakesCount += 1;\n  //       console.log(\"word: \", element, \" spelled incorrectly\");\n  //     }\n  //   });\n  //   console.log(\n  //     \"\\nNumber of spelling mistakes!:\",\n  //     this.state.spellingMistakesCount\n  //   );\n  // }\n\n  /* TODO\n    - Add errors\n    - add error for when it's empty as well\n  */\n  // Function to check whether the number of words inside the text is in the range expected by the lecturer\n  checkWordsRange() {\n    // Start by checking that the input provided by the lecturer is a number\n\n    console.log(/^\\d+$/.test(this.state.minNumberWords));\n    console.log(/^\\d+$/.test(this.state.maxNumberWords));\n    console.log(\n      this.state.essayWordCount,\n      this.state.minNumberWords,\n      this.state.maxNumberWords\n    );\n\n    // If both input are numbers, continue with the function. Otherwisem throw and error\n    if (\n      /^\\d+$/.test(this.state.minNumberWords) &&\n      /^\\d+$/.test(this.state.maxNumberWords)\n    ) {\n      console.log(\"Both inputs are correct!\");\n      // Check whether the essay is within range\n      if (\n        this.state.essayWordCount > this.state.minNumberWords &&\n        this.state.essayWordCount < this.state.maxNumberWords\n      ) {\n        console.log(\"Essay word count between range!\");\n      }\n    } else {\n      console.log(\"One or both inputs incorrect! Try again\");\n    }\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return (\n        <View>\n          <Text>Loading..</Text>\n        </View>\n      );\n    }\n    // Display if the the page is ready\n    else {\n      return (\n        <View style={styles.body}>\n          <Text style={styles.title}>AUTOMATED ESSAY MARKING SYSTEM</Text>\n          <View style={styles.container}>\n            <View style={styles.row}>\n              <Text style={styles.subtitle}>INSERT ESSAY</Text>\n            </View>\n\n            <View style={styles.row}>\n              <TextInput\n                style={styles.input}\n                multiline={true}\n                onChangeText={(essayText) => this.setState({ essayText })}\n                value={this.state.essayText}\n              />\n            </View>\n\n            <View style={styles.row}>\n              <Text style={styles.subtitle}>INSERT TOPIC RELATED WORDS</Text>\n            </View>\n            <View style={styles.row}>\n              <View>\n                <Text style={styles.label}>Key term 1:</Text>\n                <TextInput\n                  style={styles.lecturerInput}\n                  onChangeText={(lecturerInput1) =>\n                    this.setState({ lecturerInput1 })\n                  }\n                  value={this.state.lecturerInput1}\n                ></TextInput>\n              </View>\n              <View>\n                <Text style={styles.label}>Key term 2:</Text>\n                <TextInput\n                  style={styles.lecturerInput}\n                  onChangeText={(lecturerInput2) =>\n                    this.setState({ lecturerInput2 })\n                  }\n                  value={this.state.lecturerInput2}\n                ></TextInput>\n              </View>\n              <View>\n                <Text style={styles.label}>Key term 3:</Text>\n                <TextInput\n                  style={styles.lecturerInput}\n                  onChangeText={(lecturerInput3) =>\n                    this.setState({ lecturerInput3 })\n                  }\n                  value={this.state.lecturerInput3}\n                ></TextInput>\n              </View>\n              <View>\n                <Text style={styles.label}>Key term 4:</Text>\n                <TextInput\n                  style={styles.lecturerInput}\n                  onChangeText={(lecturerInput4) =>\n                    this.setState({ lecturerInput4 })\n                  }\n                  value={this.state.lecturerInput4}\n                ></TextInput>\n              </View>\n              <View>\n                <Text style={styles.label}>Key term 5:</Text>\n                <TextInput\n                  style={styles.lecturerInput}\n                  onChangeText={(lecturerInput5) =>\n                    this.setState({ lecturerInput5 })\n                  }\n                  value={this.state.lecturerInput5}\n                ></TextInput>\n              </View>\n            </View>\n\n            {/* Range oof words number */}\n            <View style={styles.row}>\n              <Text style={styles.subtitle}>\n                INSERT EXPECTED WORD COUNT RANGE\n              </Text>\n            </View>\n            <View style={styles.rowStart}>\n              <View>\n                <Text style={styles.label}>Min:</Text>\n                <TextInput\n                  style={styles.lecturerInput}\n                  onChangeText={(minNumberWords) =>\n                    this.setState({ minNumberWords })\n                  }\n                  value={this.state.minNumberWords}\n                  keyboardType=\"numeric\"\n                  maxLength={5}\n                ></TextInput>\n              </View>\n              <View>\n                <Text style={styles.label}>Min:</Text>\n                <TextInput\n                  style={styles.lecturerInput}\n                  onChangeText={(maxNumberWords) =>\n                    this.setState({ maxNumberWords })\n                  }\n                  value={this.state.maxNumberWords}\n                  keyboardType=\"numeric\"\n                  maxLength={5}\n                ></TextInput>\n              </View>\n            </View>\n\n            <View style={styles.row}>\n              <TouchableOpacity style={styles.primaryButton}>\n                <Text style={styles.buttonText}>{\"ESSAY TYPE\"}</Text>\n              </TouchableOpacity>\n\n              <TouchableOpacity\n                style={styles.primaryButton}\n                onPress={() => this.processText()}\n              >\n                <Text style={styles.buttonText}>{\"SUBMIT\"}</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n      );\n    }\n  }\n}\n\nexport default App;\n\nconst styles = StyleSheet.create({\n  body: {\n    backgroundColor: \"#F1F1F1\",\n    backgroundColor: \"#F5F5F5\",\n    backgroundColor: \"#F5F5F5\",\n    height: \"100%\",\n  },\n  input: {\n    height: 300,\n    fontSize: 16, // CHANGE\n    padding: 10,\n    backgroundColor: \"#ffffff\",\n    width: \"100%\",\n    borderWidth: 3,\n    borderColor: \"#ABABAB\",\n    boxShadow: \"0px 4px 4px rgba(0, 0, 0, 0.25)\",\n    color: \"#444444\",\n    lineHeight: 25,\n  },\n\n  container: {\n    // backgroundColor: \"#F1F1F1\",\n    flex: 1,\n    flexDirection: \"column\",\n    alignItems: \"center\", // keep content in the middle\n    marginTop: 10,\n    maxWidth: 1100,\n    width: \"100%\",\n    margin: \"auto\",\n    marginBottom: 50,\n    backgroundColor: \"#F1F1F1\",\n    // borderLeftWidth: 3,\n    // borderLeftColor: \"#E3E3E3\",\n    paddingLeft: 40,\n    // borderRightWidth: 3,\n    // borderRightColor: \"#E3E3E3\",\n    paddingRight: 40,\n    paddingBottom: 20,\n    boxShadow: \"0px 4px 10px rgba(0, 0, 0, 0.25)\",\n\n    // minWidth: \"80vw\",\n  },\n  row: {\n    // backgroundColor: \"#E9E9E9\",\n    flexDirection: \"row\",\n    // minWidth: 600,\n    justifyContent: \"space-between\",\n    // marginTop: 40,\n    width: \"100%\",\n    flexWrap: \"wrap\",\n    gap: 8,\n  },\n  rowStart: {\n    flexDirection: \"row\",\n    // minWidth: 600,\n    // justifyContent: \"space-between\",\n    // marginTop: 40,\n    width: \"100%\",\n    flexWrap: \"wrap\",\n    gap: 25,\n    marginBottom: 25,\n  },\n  rowVertical: {\n    flexDirection: \"columns\",\n    // minWidth: 600,\n    justifyContent: \"space-between\",\n    marginTop: 40,\n    backgroundColor: \"#E9E9E9\",\n  },\n  lecturerInput: {\n    backgroundColor: \"#ffffff\",\n    padding: 7,\n    marginBottom: 10,\n    borderWidth: 2,\n    borderColor: \"#ABABAB\",\n    color: \"#444444\",\n  },\n  title: {\n    backgroundColor: \"#E9E9E9\",\n    backgroundColor: \"#E0E0E0\",\n    fontSize: 30,\n    width: \"100%\",\n    textAlign: \"center\",\n    padding: 40,\n    fontStyle: \"normal\",\n    fontWeight: 600,\n    fontSize: 40,\n    lineHeight: 47,\n    /* identical to box height */\n    letterSpacing: \"0.325em\",\n    color: \"#2EA7EB\",\n    boxShadow: \"0px 10px 10px rgba(0, 0, 0, 0.25)\",\n    marginBottom: 20,\n  },\n  primaryButton: {\n    textAlign: \"center\",\n    minWidth: 169,\n    padding: 8,\n    backgroundColor: \"#FFFFFF\",\n    borderWidth: 2.5,\n    borderColor: \"#2EA7EB\",\n  },\n\n  buttonText: {\n    color: \"#2EA7EB\",\n\n    fontSize: \"14\",\n    // fontamily: Roboto-Medium;\n    letterSpacing: 1.25,\n  },\n  subtitle: {\n    fontStyle: \"normal\",\n    fontWeight: 400,\n    fontSize: 20,\n    lineHeight: 18,\n    letterSpacing: \"0.16em\",\n    marginTop: 30,\n    marginBottom: 10,\n    // color: \"#444444\",\n    color: \"#2EA7EB\",\n  },\n  label: {\n    fontStyle: \"normal\",\n    fontWeight: 400,\n    lineHeight: 18,\n    // letterSpacing: \"0.16em\",\n\n    marginBottom: 2,\n    color: \"#444444\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}